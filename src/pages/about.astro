---
import ImageMod from "@/components/ImageMod.astro";
import Base from "@/layouts/Base.astro";
import { getSinglePage } from "@/lib/contentParser.astro";
import { markdownify } from "@/lib/utils/textConverter";
import CallToAction from "@/partials/CallToAction.astro";
import { getEntry } from "astro:content";

const about = await getEntry("about", "-index");
const {
  title,
  description,
  meta_title,
  button,
  image,
  story,
  value,
  team,
  career,
} = about.data;

const call_to_action = await getEntry("sections", "call-to-action");
const careers = await getSinglePage("career");
---

<Base
  title={title}
  meta_title={meta_title}
  description={description}
  image={image}
>
  <section class="section bg-theme-light">
    <div class="container">
      <div class="justify-between items-center row g-4 gy-5 xl:gy-0">
        <div class="lg:col-5">
          <h1
            class="pb-4"
            data-aos="fade-up-sm"
            data-aos-delay="100"
            set:html={markdownify(title)}
          />
          <div data-aos="fade-up-sm" data-aos-delay="200">
            <p class="pb-6" set:html={markdownify(description)} />
            {
              button.enable && (
                <a href={button.link} class="btn btn-primary">
                  {button.label}
                </a>
              )
            }
          </div>
        </div>
        <div class="lg:col-6" data-aos="fade-left-sm" data-aos-delay="200">
          <ImageMod src={image} alt="About Image" width={0} height={0} />
        </div>
      </div>
    </div>
  </section>

  <section class="pb-0 section">
    <div class="container">
      <div class="row g-4">
        {
          story.stats.map((s, i: number) => (
            <div
              class="sm:col-6 lg:col-4"
              data-aos="fade-right-sm"
              data-aos-delay={100 + i * 100}
            >
              <div class="p-8 h-full rounded-lg border">
                <h2
                  class="pb-3 text-4xl text-center"
                  set:html={markdownify(s.value)}
                />
                <p
                  class="text-center text-light"
                  set:html={markdownify(s.key)}
                />
              </div>
            </div>
          ))
        }
      </div>
    </div>
  </section>

  <section class="section">
    <div class="container">
      <div class="flex flex-col justify-between items-start lg:flex-row">
        <div
          class="w-[100%] lg:w-[40%] max-lg:mb-11"
          data-aos="fade-up-sm"
          data-aos-delay="100"
        >
          <h2 set:html={markdownify(story.title)} />
        </div>
        <div class="w-[100%] lg:w-[55%]">
          <p
            class="pb-8"
            data-aos="fade-up-sm"
            data-aos-delay="200"
            set:html={markdownify(story.content_1)}
          />
          <p
            data-aos="fade-up-sm"
            data-aos-delay="300"
            set:html={markdownify(story.content_2)}
          />
        </div>
      </div>
    </div>
  </section>

  <section class="section bg-primary">
    <div class="container">
      <div class="justify-between row g-4 gy-5">
        <div class="lg:col-4">
          <h3
            class="pb-5 text-4xl text-white"
            data-aos="fade-up-sm"
            data-aos-delay="100"
            set:html={markdownify(value.title)}
          />
          <p
            class="text-theme-light/50"
            data-aos="fade-up-sm"
            data-aos-delay="200"
            set:html={markdownify(value.content)}
          />
        </div>
        <div class="text-white lg:col-6">
          <div class="flex flex-col gap-7">
            {
              value.values.map((v, i: number) => (
                <div
                  class="flex flex-col gap-5 pb-5 border-b-2 border-border/20"
                  data-aos="fade-up-sm"
                  data-aos-delay={100 + i * 100}
                >
                  <h3
                    class="text-2xl text-white"
                    set:html={markdownify(v.title)}
                  />
                  <p
                    class="text-theme-light/80"
                    data-aos="fade-up-sm"
                    data-aos-delay={200 + i * 100}
                    set:html={markdownify(v.content)}
                  />
                </div>
              ))
            }
          </div>
        </div>
      </div>
    </div>
  </section>

  <section class="pb-0 section">
    <div class="container">
      <div class="mb-10 xl:mb-14">
        <h2
          class="pb-4 text-4xl text-center"
          data-aos="fade-up-sm"
          data-aos-delay="100"
          set:html={markdownify(team.title)}
        />
        <p
          class="text-center"
          data-aos="fade-up-sm"
          data-aos-delay="200"
          set:html={markdownify(team.content)}
        />
      </div>
      <div class="row g-4">
        {
          team.members.map((m, i: number) => (
            <div
              class="sm:col-6 md:col-4 lg:col-3"
              data-aos="fade-up-sm"
              data-aos-delay={100 + i * 100}
            >
              <div class="p-4 pb-6 rounded-xl border">
                <ImageMod
                  src={m.image}
                  alt="Team Member"
                  class="pb-3 rounded-inherit"
                  width={0}
                  height={0}
                  format="webp"
                />
                <h3 class="pb-1 text-xl" set:html={m.name} />
                <p class="text-light" set:html={m.designation} />
              </div>
            </div>
          ))
        }
      </div>
    </div>
  </section>

  <section class="pb-0 mx-5 section">
    <div class="container">
      <div class="mb-10 xl:mb-14">
        <h2
          class="pb-4 text-4xl text-center"
          data-aos="fade-up-sm"
          data-aos-delay="100"
          set:html={markdownify(career.title)}
        />
        <p
          class="mx-auto max-w-xl text-center"
          data-aos="fade-up-sm"
          data-aos-delay="200"
          set:html={markdownify(career.content)}
        />
      </div>
      <div class="justify-center row">
        <div class="lg:col-8">
          {
            careers.map((career, i: number) => (
              <div class="flex flex-col gap-5 [&:not(:last-child)]:mb-5">
                <div
                  class="items-center py-3 rounded-lg border row lg:gx-4 sm:px-4"
                  data-aos="fade-up-sm"
                  data-aos-delay={200 + i * 100}
                >
                  <div class="md:col-6">
                    <div class="flex gap-5 items-center">
                      <div class="flex justify-center items-center w-10 h-10 rounded-full bg-secondary/15">
                        <p class="text-lg font-bold text-secondary">{i + 1}</p>
                      </div>
                      <p
                        class="font-semibold"
                        set:html={markdownify(career.data.title)}
                      />
                    </div>
                  </div>
                  <div class="md:col-6">
                    <div class="flex justify-between items-center pt-3 lg:pt-0">
                      <p
                        class="text-light"
                        set:html={markdownify(career?.data?.duration!)}
                      />
                      <p
                        class="text-light"
                        set:html={markdownify(career?.data?.location!)}
                      />
                      <a
                        href={`/career/${career.slug}`}
                        class="border btn border-secondary text-secondary hover:opacity-80"
                      >
                        Apply Now
                      </a>
                    </div>
                  </div>
                </div>
              </div>
            ))
          }
        </div>
      </div>
    </div>
  </section>

  <CallToAction call_to_action={call_to_action} />
</Base>
