---
import ImageMod from "@/components/ImageMod.astro";
import Base from "@/layouts/Base.astro";
import { getSinglePage } from "@/lib/contentParser.astro";
import { markdownify } from "@/lib/utils/textConverter";
import CallToAction from "@/partials/CallToAction.astro";
import { getEntry } from "astro:content";
import { readFileSync } from 'fs';
import { fileURLToPath } from 'url';
import { join, dirname } from 'path';
import TeamMembers from '../config/team.json';
// Define team member interface
interface TeamMember {
  Name: string;
  Role: string;
  Department: string;
  Email: string;
  "Linked In": string;
  Bio: string;
  Active: string;
  path: string;
}

// Filter active team members
const teamMembers: TeamMember[] = TeamMembers
  .filter((member: any) => member.Active && member.Active.toUpperCase() === 'TRUE');

const about = await getEntry("about", "-index");
const {
  title,
  description,
  meta_title,
  button,
  image,
  story,
  value,
  team,
  career,
} = about.data;

const call_to_action = await getEntry("sections", "call-to-action");
const careers = await getSinglePage("career");
---

<Base
  title={title}
  meta_title={meta_title}
  description={description}
  image={image}
>
  <section class="section bg-theme-light">
    <div class="container">
      <div class="justify-between items-center row g-4 gy-5 xl:gy-0">
        <div class="lg:col-5">
          <h1
            class="pb-4"
            data-aos="fade-up-sm"
            data-aos-delay="100"
            set:html={markdownify(title)}
          />
          <div data-aos="fade-up-sm" data-aos-delay="200">
            <p class="pb-6" set:html={markdownify(description)} />
            {
              button.enable && (
                <a href={button.link} class="btn btn-primary">
                  {button.label}
                </a>
              )
            }
          </div>
        </div>
        <div class="lg:col-6" data-aos="fade-left-sm" data-aos-delay="200">
          <ImageMod src={image} alt="About Image" width={0} height={0} />
        </div>
      </div>
    </div>
  </section>

  <section class="pb-0 section">
    <div class="container">
      <div class="row g-4">
        {
          story.stats.map((s: { key: string; value: string }, i: number) => (
            <div
              class="sm:col-6 lg:col-4"
              data-aos="fade-right-sm"
              data-aos-delay={100 + i * 100}
            >
              <div class="p-8 h-full rounded-lg border">
                <h2
                  class="pb-3 text-4xl text-center"
                  set:html={markdownify(s.value)}
                />
                <p
                  class="text-center text-light"
                  set:html={markdownify(s.key)}
                />
              </div>
            </div>
          ))
        }
      </div>
    </div>
  </section>

  <section class="section">
    <div class="container">
      <div class="flex flex-col justify-between items-start lg:flex-row">
        <div
          class="w-[100%] lg:w-[40%] max-lg:mb-11"
          data-aos="fade-up-sm"
          data-aos-delay="100"
        >
          <h2 set:html={markdownify(story.title)} />
        </div>
        <div class="w-[100%] lg:w-[55%]">
          <p
            class="pb-8"
            data-aos="fade-up-sm"
            data-aos-delay="200"
            set:html={markdownify(story.content_1)}
          />
          <p
            data-aos="fade-up-sm"
            data-aos-delay="300"
            set:html={markdownify(story.content_2)}
          />
        </div>
      </div>
    </div>
  </section>

  <section class="hidden section bg-primary">
    <div class="container">
      <div class="justify-between row g-4 gy-5">
        <div class="lg:col-4">
          <h3
            class="pb-5 text-4xl text-white"
            data-aos="fade-up-sm"
            data-aos-delay="100"
            set:html={markdownify(value.title)}
          />
          <p
            class="text-theme-light/50"
            data-aos="fade-up-sm"
            data-aos-delay="200"
            set:html={markdownify(value.content)}
          />
        </div>
        <div class="text-white lg:col-6">
          <div class="flex flex-col gap-7">
            {
              value.values.map((v: { title: string; content: string }, i: number) => (
                <div
                  class="flex flex-col gap-5 pb-5 border-b-2 border-border/20"
                  data-aos="fade-up-sm"
                  data-aos-delay={100 + i * 100}
                >
                  <h3
                    class="text-2xl text-white"
                    set:html={markdownify(v.title)}
                  />
                  <p
                    class="text-theme-light/80"
                    data-aos="fade-up-sm"
                    data-aos-delay={200 + i * 100}
                    set:html={markdownify(v.content)}
                  />
                </div>
              ))
            }
          </div>
        </div>
      </div>
    </div>
  </section>

  <section class="pb-0 section">
    <div class="container">
      <div class="mb-10 xl:mb-14">
        <h2
          class="pb-4 text-4xl text-center"
          data-aos="fade-up-sm"
          data-aos-delay="100"
          set:html={markdownify(team.title)}
        />
        <p
          class="text-center"
          data-aos="fade-up-sm"
          data-aos-delay="200"
          set:html={markdownify(team.content)}
        />
      </div>
      <div class="row g-4">
        {
          teamMembers.map((member, i) => (
            <div
              class="sm:col-6 md:col-4 lg:col-3"
              data-aos="fade-up-sm"
              data-aos-delay={100 + i * 100}
            >
              <div class="p-4 pb-6 rounded-xl border">
                <div class="aspect-ratio-box mb-3 relative overflow-hidden rounded-lg" style="padding-top: 100%;">
                  <ImageMod
                    src={member.path}
                    alt={`${member.Name} - ${member.Role}`}
                    class="rounded-inherit absolute top-0 left-0 w-full h-full object-cover"
                    width={300}
                    height={300}
                    format="webp"
                  />
                </div>
                <div>
                  <h3 class="pb-1 text-xl">{member.Name}</h3>
                  <p class="text-light">{member.Role}</p>
                  <div class="flex space-x-2 mt-2">
                    {member["Linked In"] && (
                      <a href={member["Linked In"]} target="_blank" rel="noopener noreferrer" class="text-primary hover:text-secondary">
                        <svg xmlns="http://www.w3.org/2000/svg" width="20" height="20" viewBox="0 0 24 24" fill="currentColor">
                          <path d="M19 0h-14c-2.761 0-5 2.239-5 5v14c0 2.761 2.239 5 5 5h14c2.762 0 5-2.239 5-5v-14c0-2.761-2.238-5-5-5zm-11 19h-3v-11h3v11zm-1.5-12.268c-.966 0-1.75-.79-1.75-1.764s.784-1.764 1.75-1.764 1.75.79 1.75 1.764-.783 1.764-1.75 1.764zm13.5 12.268h-3v-5.604c0-3.368-4-3.113-4 0v5.604h-3v-11h3v1.765c1.396-2.586 7-2.777 7 2.476v6.759z"/>
                        </svg>
                      </a>
                    )}
                    {member.Bio && (
                      <div class="relative group hidden sm:block">
                        <button class="text-primary hover:text-secondary focus:outline-none" title="View Bio">
                          <svg xmlns="http://www.w3.org/2000/svg" width="20" height="20" viewBox="0 0 24 24" fill="currentColor">
                            <path d="M12 2C6.486 2 2 6.486 2 12s4.486 10 10 10 10-4.486 10-10S17.514 2 12 2zm0 18c-4.411 0-8-3.589-8-8s3.589-8 8-8 8 3.589 8 8-3.589 8-8 8z"/>
                            <path d="M11 11h2v6h-2zm0-4h2v2h-2z"/>
                          </svg>
                          <span class="absolute -top-1 -right-1 flex h-3 w-3">
                            <span class="animate-ping absolute inline-flex h-full w-full rounded-full bg-primary opacity-75"></span>
                            <span class="relative inline-flex rounded-full h-3 w-3 bg-primary"></span>
                          </span>
                        </button>
                        <div class="absolute z-10 left-0 w-72 md:w-80 p-4 mt-2 bg-white rounded-lg shadow-xl opacity-0 invisible group-hover:opacity-100 group-hover:visible transition-all duration-300 text-sm max-h-[300px] overflow-y-auto border border-gray-200">
                          <h4 class="font-bold mb-2">{member.Name}</h4>
                          <p class="whitespace-pre-line">{member.Bio}</p>
                        </div>
                      </div>
                    )}
                  </div>
                </div>
              </div>
            </div>
          ))
        }
      </div>
    </div>
  </section>

  <section class="pb-0 mx-5 section">
    <div class="container">
      <div class="mb-10 xl:mb-14">
        <h2
          class="pb-4 text-4xl text-center"
          data-aos="fade-up-sm"
          data-aos-delay="100"
          set:html={markdownify(career.title)}
        />
        <p
          class="mx-auto max-w-xl text-center"
          data-aos="fade-up-sm"
          data-aos-delay="200"
          set:html={markdownify(career.content)}
        />
      </div>
      <div class="justify-center row">
        <div class="lg:col-8">
          {
            careers.map((career, i: number) => (
              <div class="flex flex-col gap-5 [&:not(:last-child)]:mb-5">
                <div
                  class="items-center py-3 rounded-lg border row lg:gx-4 sm:px-4"
                  data-aos="fade-up-sm"
                  data-aos-delay={200 + i * 100}
                >
                  <div class="md:col-6">
                    <div class="flex gap-5 items-center">
                      <div class="flex justify-center items-center w-10 h-10 rounded-full bg-secondary/15">
                        <p class="text-lg font-bold text-secondary">{i + 1}</p>
                      </div>
                      <p
                        class="font-semibold"
                        set:html={markdownify(career.data.title)}
                      />
                    </div>
                  </div>
                  <div class="md:col-6">
                    <div class="flex justify-between items-center pt-3 lg:pt-0">
                      <p
                        class="text-light"
                        set:html={markdownify(career?.data?.duration!)}
                      />
                      <p
                        class="text-light"
                        set:html={markdownify(career?.data?.location!)}
                      />
                      <a
                        href={`/career/${career.slug}`}
                        class="border btn border-secondary text-secondary hover:opacity-80"
                      >
                        Apply Now
                      </a>
                    </div>
                  </div>
                </div>
              </div>
            ))
          }
        </div>
      </div>
    </div>
  </section>

  <CallToAction call_to_action={call_to_action} />
</Base>
